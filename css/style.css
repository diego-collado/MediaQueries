/* 
----> BreakPoints CSS
Los puntos de interrupción CSS son puntos en los que el contenido del sitio web responde de acuerdo con el ancho del dispositivo, lo que le permite mostrar el mejor diseño posible al usuario.
Existen 2 enfoques: 

    · Puntos de interrupción basados ​​en dispositivo: Decidir los puntos basados ​​en diferentes dispositivos parece una buena idea, pero en realidad no siempre es la mejor ya que terminaremos con una gran lista de Media Queries.

    · Puntos de interrupción basados ​​en contenido: La opción ideal para decidir los puntos de interrupción se basa en el contenido del sitio. Este método permite simplemente agregar puntos de interrupción donde el contenido necesita ajustarse al diseño. Esto hará que las Media Queries sean mucho más simples y manejables.

    Los puntos de interrupción CSS son una excelente manera de reestructurar el diseño para proporcionar la mejor experiencia de usuario en diferentes dispositivos.


----> La lista resumida de lo que suele estar bien sería la siguiente:

Si el texto es importante que vaya en grande
No utilizar varios niveles de grises sobre blanco, variar la opacidad
Calcular bien las paletas de colores (HSB)
Usar espacio en blanco para separar grupos de información
Usar colores para separar filas
Usar fusión/multiplicar en vez de sombras (texto sobre imágenes)
La longitud ideal de las líneas: 45–65 caracteres
No reinventar la rueda: reciclar diseños válidos
Usar «colores de marca» en algunos elementos, no «ocupando mucho»
Alinear visualmente el texto de las listas con boliches

----> Tipos de medios
Los valores que podemos definir son:

–all: Se utiliza para todos los tipos de medios o dispositivos.
–print: Se utiliza para impresoras
–screen: Se utiliza para pantallas de ordenador, tablets, teléfonos móviles, etc…
–speech: Se utiliza para lectores de pantalla, generalmente utilizados por personas con discapacidad visual.


----> Funciones a utilizar
Las funciones de medios o Media Features son las características específicas que otorgamos a cada user-agent, navegador o dispositivo de salida. Aunque algunas de las que vamos a enumerar ya están obsoletas, las más importantes son:

–width: Ancho de la ventana de visualización.
–height: Alto de la ventana de visualización.
–aspect-ratio: Relación de aspecto ancho/alto de la ventana de visualización.    
–orientation: Orientación de la ventana de visualización .
–resolution: Densidad de píxeles del dispositivo de salida.            
–scan: Proceso de escaneado del dispositivo de salida.
–grid: ¿Utiliza el dispositivo una pantalla de cuadrícula o mapa de bits? 
–update: ¿Con qué frecuencia el dispositivo de salida puede modificar la apariencia del contenido?
–overflow-block: ¿Cómo maneja el dispositivo de salida el contenido que desborda la vista a lo largo del eje del bloque?
–overflow-inline: ¿Se puede desplazar el contenido que desborda la ventana de visualización a lo largo del eje en línea?
–color: Número de bits por componente de color del dispositivo de salida, o cero si el dispositivo no es de color.
–color-gamut: Rango aproximado de colores que son soportados por el user-agent y el dispositivo de salida.
–color-index: Número de entradas en la tabla de búsqueda de color del dispositivo de salida, o cero si el dispositivo no utiliza dicha tabla.          
–display-mode: El modo de visualización de la aplicación.
–monochrome: Bits por píxel en el búfer de fotogramas monocromo del dispositivo de salida, o cero si el dispositivo no es monocromo.        
–inverted-colors: ¿Está invirtiendo colores el agente de usuario o el sistema operativo subyacente?
–pointer: ¿Es el mecanismo de entrada principal un dispositivo señalador y, de ser así, cuán preciso es?
–hover: ¿El mecanismo de entrada principal permite al usuario pasar el ratón por encima de los elementos?
–any-pointer: ¿Es cualquier mecanismo de entrada disponible un dispositivo señalador y, de ser así, cuán preciso es?
–any-hover: ¿Hay algún mecanismo de entrada disponible que permita al usuario pasar el ratón por encima de los elementos?
–light-level: Nivel de luz del entorno.
–prefers-reduced-motion: El usuario prefiere menos movimiento en la página.
–prefers-reduced-transparency: El usuario prefiere una transparencia reducida.
–prefers-contrast: Detecta si el usuario ha solicitado que el sistema aumente o disminuya la cantidad de contraste entre los colores adyacentes.
–prefers-color-scheme: Detecta si el usuario prefiere un esquema de color claro u oscuro.
–forced-colors: Detecta si el user-agent restringe la paleta de colores.
-scripting: Detecta si está disponible el scripting (es decir, JavaScript).
–device-width: Ancho de la superficie de renderizado del dispositivo de salida (Obsoleto).
–device-height: Altura de la superficie de renderizado del dispositivo de salida (Obsoleto).
–device-aspect-ratio: Relación de aspecto ancho/alto del dispositivo de salida (Obsoleto).

----> ¿Cómo juego con las MQ?
Alternativa 1: Aplicación de mediaqueries por la etiqueta LINK
    <link rel="stylesheet" href="estilo-imprimir.css" media="print">
    <link rel="stylesheet" href="estilo-pantallas-grandes.css" media="(min-width:1200px)">

Alternativa 2: Aplicación de mediaqueries mediante @media

@media (min-width: 500px) {
    h1{margin: 1%;}
    .estiloresponsive{float: right;padding-left: 15px;}
}



----> Operadores lógicos para las Media Queries
Para combinar diversas condiciones podemos usar los operadores lógicos, de una manera similar a como se usan en lenguajes de programación. Los que tenemos disponibles son:

Operador and: las dos condiciones deben cumplirse para que se evalúe como verdadera.
Operador not: es una negación de una condición. Cuando esa condición no se cumpla se aplicarán las media queries.
Operador only: se aplican las reglas solo en el caso que se cunpla cierta circunstancia.
Operador or: no existe como tal, pero puedes poner varias condiciones separadas por comas y cuando se cumpla cualquiera de ellas, se aplicarán los estilos de las media queries.

@media (max-width: 600px) and (orientation: landscape) {
    h1{color: red;}
}

----> Todo depende de viewport
Es altamente recomendable que se altere la etiqueta viewport para conseguir que tu navegador se comporte como tú deseas, especialmente en el caso de las páginas que estamos diseñando para verse correctamente en pantallas pequeñas. Para ello disponemos de los siguientes parámetros en la etiqueta META.

Width: anchura virtual (emulada) de la pantalla o anchura del viewport.
Height: altura virtual de la pantalla o anchura del viewport.
Initial-scale: la escala inicial del documento.
Minimum-scale: la escala mínima que se puede poner en el documento.
Maximum-scale: la escala máxima configurable en el documento.
User-scalable: si se permite o no al usuario hacer zoom.

Nota: desactivar el zoom con user-scalable=no nos facilita tener siempre la escala a como nosotros hayamos definido en la etiqueta META viewport, lo que puede simplificarnos la vida a la hora de definir cómo se debe ver una web. Sin embargo, estaremos limitando la posibilidad de que el usuario haga zoom puntualmente para agrandar o empequeñecer alguna cosa. Por todo ello, cabe sopesar bien qué es lo que queremos permitir y si realmente definiendo un maximum-scale y minimum-scale, estamos acotando bien el uso de nuestra web.

*/


/* Media Queries para dispositivos más comunes */


/* Smartphones (portrait and landscape) ----------- */

@media only screen and (min-device-width: 320px) and (max-device-width: 480px) {
    /* Styles */
}


/* Smartphones (landscape) ----------- */

@media only screen and (min-width: 321px) {
    /* Styles */
}


/* Smartphones (portrait) ----------- */

@media only screen and (max-width: 320px) {
    /* Styles */
}


/* iPads (portrait and landscape) ----------- */

@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) {
    /* Styles */
}


/* iPads (landscape) ----------- */

@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape) {
    /* Styles */
}


/* iPads (portrait) ----------- */

@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: portrait) {
    /* Styles */
}


/**********
iPad 3
**********/

@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: landscape) and (-webkit-min-device-pixel-ratio: 2) {
    /* Styles */
}

@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation: portrait) and (-webkit-min-device-pixel-ratio: 2) {
    /* Styles */
}


/* Desktops and laptops ----------- */

@media only screen and (min-width: 1224px) {
    /* Styles */
}


/* Large screens ----------- */

@media only screen and (min-width: 1824px) {
    /* Styles */
}


/* iPhone 4 ----------- */

@media only screen and (min-device-width: 320px) and (max-device-width: 480px) and (orientation: landscape) and (-webkit-min-device-pixel-ratio: 2) {
    /* Styles */
}

@media only screen and (min-device-width: 320px) and (max-device-width: 480px) and (orientation: portrait) and (-webkit-min-device-pixel-ratio: 2) {
    /* Styles */
}


/* iPhone 5 ----------- */

@media only screen and (min-device-width: 320px) and (max-device-height: 568px) and (orientation: landscape) and (-webkit-device-pixel-ratio: 2) {
    /* Styles */
}

@media only screen and (min-device-width: 320px) and (max-device-height: 568px) and (orientation: portrait) and (-webkit-device-pixel-ratio: 2) {
    /* Styles */
}


/* iPhone 6, 7, 8 ----------- */

@media only screen and (min-device-width: 375px) and (max-device-height: 667px) and (orientation: landscape) and (-webkit-device-pixel-ratio: 2) {
    /* Styles */
}

@media only screen and (min-device-width: 375px) and (max-device-height: 667px) and (orientation: portrait) and (-webkit-device-pixel-ratio: 2) {
    /* Styles */
}


/* iPhone 6+, 7+, 8+ ----------- */

@media only screen and (min-device-width: 414px) and (max-device-height: 736px) and (orientation: landscape) and (-webkit-device-pixel-ratio: 2) {
    /* Styles */
}

@media only screen and (min-device-width: 414px) and (max-device-height: 736px) and (orientation: portrait) and (-webkit-device-pixel-ratio: 2) {
    /* Styles */
}


/* iPhone X ----------- */

@media only screen and (min-device-width: 375px) and (max-device-height: 812px) and (orientation: landscape) and (-webkit-device-pixel-ratio: 3) {
    /* Styles */
}

@media only screen and (min-device-width: 375px) and (max-device-height: 812px) and (orientation: portrait) and (-webkit-device-pixel-ratio: 3) {
    /* Styles */
}


/* iPhone XS Max, XR ----------- */

@media only screen and (min-device-width: 414px) and (max-device-height: 896px) and (orientation: landscape) and (-webkit-device-pixel-ratio: 3) {
    /* Styles */
}

@media only screen and (min-device-width: 414px) and (max-device-height: 896px) and (orientation: portrait) and (-webkit-device-pixel-ratio: 3) {
    /* Styles */
}


/* Samsung Galaxy S3 ----------- */

@media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation: landscape) and (-webkit-device-pixel-ratio: 2) {
    /* Styles */
}

@media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation: portrait) and (-webkit-device-pixel-ratio: 2) {
    /* Styles */
}


/* Samsung Galaxy S4 ----------- */

@media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation: landscape) and (-webkit-device-pixel-ratio: 3) {
    /* Styles */
}

@media only screen and (min-device-width: 320px) and (max-device-height: 640px) and (orientation: portrait) and (-webkit-device-pixel-ratio: 3) {
    /* Styles */
}


/* Samsung Galaxy S5 ----------- */

@media only screen and (min-device-width: 360px) and (max-device-height: 640px) and (orientation: landscape) and (-webkit-device-pixel-ratio: 3) {
    /* Styles */
}

@media only screen and (min-device-width: 360px) and (max-device-height: 640px) and (orientation: portrait) and (-webkit-device-pixel-ratio: 3) {
    /* Styles */
}